[package]
name = "tlsn-tls-client"
authors = ["TLSNotary Team"]
description = "A TLS client for TLSNotary"
keywords = ["tls", "mpc", "2pc", "client", "sync"]
categories = ["cryptography"]
license = "MIT OR Apache-2.0"
version = "0.1.0-alpha.6"
edition = "2021"
autobenches = false
build = "build.rs"

[lib]
name = "tls_client"

[build-dependencies]
rustversion = { version = "1", optional = true }

[dependencies]
tlsn-tls-backend = { path = "../tls-backend" }
tlsn-tls-core = { path = "../tls-core" }

async-trait = "0.1"
log = { version = "0.4", optional = true }
ring = "0.17"
sct = "0.7"
webpki = { version = "0.22", features = ["alloc", "std"] }
aes-gcm = "0.9"
p256 = { version = "0.13", features = ["ecdh"] }
rand = "0.8"
hmac = "0.12"
sha2 = { version = "0.10", features = ["compress"] }
digest = "0.10"
futures = "0.3"
web-time = "0.2"

[features]
default = ["logging", "tls12"]
logging = ["log"]
dangerous_configuration = []
tls12 = []
read_buf = ["rustversion"]

[dev-dependencies]
env_logger = "0.10"
webpki-roots = "0.26"
rustls-pemfile = "1"
rustls = { version = "0.20", features = ["tls12"] }
tokio = { version = "1", features = ["rt", "macros"] }

[[example]]
name = "bench"
path = "examples/internal/bench.rs"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
ring = { version = "0.17", features = ["wasm32_unknown_unknown_js"] }
getrandom = { version = "0.2", features = ["js"] }
